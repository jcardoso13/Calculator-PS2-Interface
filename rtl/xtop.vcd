$date
	Wed Dec 12 11:55:52 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module xtop_tb $end
$var wire 32 ! par_out [31:0] $end
$var wire 32 " r0 [31:0] $end
$var wire 32 # r1 [31:0] $end
$var wire 32 $ r10 [31:0] $end
$var wire 32 % r11 [31:0] $end
$var wire 32 & r12 [31:0] $end
$var wire 32 ' r13 [31:0] $end
$var wire 32 ( r14 [31:0] $end
$var wire 32 ) r15 [31:0] $end
$var wire 32 * r2 [31:0] $end
$var wire 32 + r3 [31:0] $end
$var wire 32 , r4 [31:0] $end
$var wire 32 - r5 [31:0] $end
$var wire 32 . r6 [31:0] $end
$var wire 32 / r7 [31:0] $end
$var wire 32 0 r8 [31:0] $end
$var wire 32 1 r9 [31:0] $end
$var wire 7 2 sevenseg [6:0] $end
$var wire 8 3 leds [7:0] $end
$var reg 1 4 PS2_CLK $end
$var reg 1 5 PS2_DATA $end
$var reg 1 6 clk $end
$var reg 4 7 par_addr [3:0] $end
$var reg 32 8 par_in [31:0] $end
$var reg 1 9 par_we $end
$var reg 1 : rst $end
$var integer 32 ; k [31:0] $end
$var integer 32 < start_time [31:0] $end
$scope module uut $end
$var wire 1 4 PS2_CLK $end
$var wire 1 5 PS2_DATA $end
$var wire 1 = btn $end
$var wire 1 6 clk $end
$var wire 1 > dp $end
$var wire 4 ? par_addr [3:0] $end
$var wire 32 @ par_in [31:0] $end
$var wire 1 A par_we $end
$var wire 1 B ps2_done $end
$var wire 1 : rst $end
$var wire 7 C sevenseg [6:0] $end
$var wire 32 D regf_data_to_rd [31:0] $end
$var wire 32 E ps2_data_to_rd [31:0] $end
$var wire 32 F prog_data_to_rd [31:0] $end
$var wire 9 G pc [8:0] $end
$var wire 32 H par_out [31:0] $end
$var wire 8 I leds [7:0] $end
$var wire 32 J instruction [31:0] $end
$var wire 1 K data_we $end
$var wire 32 L data_to_wr [31:0] $end
$var wire 1 M data_sel $end
$var wire 10 N data_addr [9:0] $end
$var wire 4 O anodes [3:0] $end
$var reg 1 P cprt_sel $end
$var reg 32 Q data_to_rd [31:0] $end
$var reg 1 R display_sel $end
$var reg 32 S displayed_number [31:0] $end
$var reg 8 T led_input [7:0] $end
$var reg 8 U led_sel [7:0] $end
$var reg 1 V prog_sel $end
$var reg 1 W ps2_rst $end
$var reg 1 X ps2_sel $end
$var reg 1 Y regf_sel $end
$scope module FPGA_leds $end
$var wire 1 6 clk $end
$var wire 8 Z led_input [7:0] $end
$var wire 8 [ leds_sel [7:0] $end
$var wire 1 : reset $end
$var reg 8 \ leds [7:0] $end
$var reg 8 ] leds_buffer [7:0] $end
$upscope $end
$scope module controller $end
$var wire 1 6 clk $end
$var wire 32 ^ data_to_rd [31:0] $end
$var wire 1 _ regB_we $end
$var wire 1 : rst $end
$var wire 32 ` regC [31:0] $end
$var wire 32 a regB_nxt [31:0] $end
$var wire 4 b opcode [3:0] $end
$var wire 1 c negative_nxt $end
$var wire 32 d instruction [31:0] $end
$var wire 32 e imm [31:0] $end
$var wire 32 f data_to_wr [31:0] $end
$var wire 10 g addrint [9:0] $end
$var wire 10 h addr_from_regB [9:0] $end
$var reg 1 i carry $end
$var reg 1 j carry_nxt $end
$var reg 10 k data_addr [9:0] $end
$var reg 1 M data_sel $end
$var reg 32 l data_to_rd_int [31:0] $end
$var reg 1 K data_we $end
$var reg 1 m negative $end
$var reg 1 n overflow $end
$var reg 1 o overflow_nxt $end
$var reg 9 p pc [8:0] $end
$var reg 9 q pc_nxt [8:0] $end
$var reg 32 r regA [31:0] $end
$var reg 32 s regA_nxt [31:0] $end
$var reg 32 t regB [31:0] $end
$var reg 1 u regB_sel $end
$var reg 33 v temp_regA [32:0] $end
$upscope $end
$scope module cprint $end
$var wire 1 6 clk $end
$var wire 8 w data_in [7:0] $end
$var wire 1 P sel $end
$upscope $end
$scope module prog $end
$var wire 1 6 clk $end
$var wire 8 x data_addr [7:0] $end
$var wire 32 y data_in [31:0] $end
$var wire 1 V data_sel $end
$var wire 1 K data_we $end
$var wire 9 z pc [8:0] $end
$var wire 32 { data_out [31:0] $end
$var wire 32 | data_from_rom [31:0] $end
$var wire 32 } data_from_ram [31:0] $end
$var reg 32 ~ instruction [31:0] $end
$scope module ram $end
$var wire 1 6 clk $end
$var wire 8 !" data_addr [7:0] $end
$var wire 8 "" data_addr_int [7:0] $end
$var wire 1 #" data_en_int $end
$var wire 32 $" data_in [31:0] $end
$var wire 32 %" data_in_int [31:0] $end
$var wire 32 &" data_out [31:0] $end
$var wire 1 V data_sel $end
$var wire 1 K data_we $end
$var wire 1 '" data_we_int $end
$var wire 1 (" instr_en $end
$var wire 8 )" pc [7:0] $end
$var reg 32 *" data_out_int [31:0] $end
$var reg 32 +" instruction [31:0] $end
$upscope $end
$scope module rom $end
$var wire 1 6 clk $end
$var wire 1 ," en $end
$var wire 4 -" pc [3:0] $end
$var reg 32 ." instruction [31:0] $end
$upscope $end
$upscope $end
$scope module ps2 $end
$var wire 1 4 PS2_CLK $end
$var wire 1 5 PS2_DATA $end
$var wire 1 6 clk $end
$var wire 1 W rst $end
$var reg 8 /" aux [7:0] $end
$var reg 2 0" clksr [1:0] $end
$var reg 3 1" cnt [2:0] $end
$var reg 32 2" data_out [31:0] $end
$var reg 11 3" data_out1 [10:0] $end
$var reg 8 4" data_out_pre [7:0] $end
$var reg 1 5" datafetched $end
$var reg 1 6" dataready $end
$var reg 2 7" datasr [1:0] $end
$var reg 1 8" enter $end
$var reg 8 9" reg1 [7:0] $end
$var reg 8 :" reg2 [7:0] $end
$var reg 8 ;" reg3 [7:0] $end
$var reg 8 <" reg4 [7:0] $end
$var reg 1 =" rxactive $end
$var reg 8 >" rxdata [7:0] $end
$var reg 11 ?" rxregister [10:0] $end
$var reg 16 @" rxtimeout [15:0] $end
$var reg 2 A" state [1:0] $end
$upscope $end
$scope module regf $end
$var wire 1 6 clk $end
$var wire 4 B" ext_addr [3:0] $end
$var wire 32 C" ext_data_in [31:0] $end
$var wire 32 D" ext_data_out [31:0] $end
$var wire 1 A ext_we $end
$var wire 4 E" int_addr [3:0] $end
$var wire 32 F" int_data_in [31:0] $end
$var wire 32 G" int_data_out [31:0] $end
$var wire 1 Y int_sel $end
$var wire 1 K int_we $end
$var wire 1 H" int_we_int $end
$var wire 1 I" we $end
$var wire 32 J" data_in [31:0] $end
$var wire 4 K" addr [3:0] $end
$upscope $end
$scope module seven_seg_display $end
$var wire 1 = btn $end
$var wire 1 6 clk $end
$var wire 1 R display_sel $end
$var wire 32 L" displayed_number [31:0] $end
$var wire 1 > dp $end
$var wire 1 : reset $end
$var reg 4 M" Anode_Activate [3:0] $end
$var reg 4 N" LED_BCD [3:0] $end
$var reg 7 O" LED_out [6:0] $end
$var reg 23 P" cnt [22:0] $end
$var reg 16 Q" displayed_number1 [15:0] $end
$var reg 20 R" refresh_counter [19:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 R"
b0 Q"
b0 P"
b1000000 O"
b0 N"
b111 M"
bx L"
bx K"
bx J"
xI"
0H"
bx G"
bx F"
bx E"
bx D"
b11111111111111111111111111111111 C"
b0 B"
b1 A"
b0 @"
b11111111111 ?"
bx >"
0="
bx <"
bx ;"
bx :"
bx 9"
x8"
b1x 7"
06"
05"
bx 4"
b0 3"
bx 2"
b0 1"
b1x 0"
bx /"
bx ."
bx -"
1,"
bx +"
bx *"
bx )"
1("
x'"
bx &"
bx %"
bx $"
0#"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
0u
bx t
bx s
bx r
bx q
bx p
0o
xn
xm
b0 l
bx k
xj
xi
bx h
bx g
bx f
bx e
bx d
xc
bx b
bx a
bx00000000000000000000000000000x `
0_
b0 ^
bx ]
bx \
b11111111 [
bx Z
0Y
xX
0W
0V
b0 U
bx T
bx S
0R
b0 Q
0P
b111 O
bx N
xM
bx L
xK
bx J
bx I
bx H
bx G
bx F
bx E
bx D
b1000000 C
zB
zA
b11111111111111111111111111111111 @
b0 ?
1>
z=
bx <
bx ;
0:
09
b0 8
b0 7
16
x5
x4
bx 3
b1000000 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bz !
$end
#5000
06
#10000
b10 R"
bx 0"
bx 7"
b0 @"
bx000000000000000000000000000000x `
0n
16
#11000
1:
#15000
06
#20000
0c
b0 -"
b0 )"
b0 v
b1 q
b0 s
b0 w
b0 G
b0 p
b0 z
b0 %"
b0 L
b0 f
b0 r
b0 y
b0 $"
b0 F"
b0 @"
b11 R"
16
#21000
0:
#25000
06
#30000
xc
bx v
b0 K"
bx l
1u
b0 E"
b0 ""
b0 x
b0 !"
b0 N
b0 k
0'"
0K
0M
b0 e
b0 g
b110 b
b10 q
b1100000000000000000000000000000 J
b1100000000000000000000000000000 d
b1100000000000000000000000000000 ~
b1 -"
b1 )"
b100 R"
b0 @"
b0 }
b0 +"
b1100000000000000000000000000000 |
b1100000000000000000000000000000 ."
b0x `
0m
b1 G
b1 p
b1 z
16
#35000
06
#40000
1I"
1H"
b10000 ""
b10000 x
b10000 !"
bx Q
bx ^
1Y
1'"
1K
1M
b10000 N
b10000 k
b10000 e
b10000 g
b1001 b
0u
b11 q
b10 -"
b10 )"
b10010000000000000000000000010000 J
b10010000000000000000000000010000 d
b10010000000000000000000000010000 ~
bx000000000000000000000000000000x `
xm
b10 G
b10 p
b10 z
b10010000000000000000000000010000 |
b10010000000000000000000000010000 ."
b0 @"
b101 R"
16
#45000
06
#50000
xI"
0H"
bx Q
bx ^
1Y
0'"
0K
1M
bx s
b1000 b
b100 q
b10000000000000000000000000010000 J
b10000000000000000000000000010000 d
b10000000000000000000000000010000 ~
b11 -"
b11 )"
b110 R"
b0 @"
b10000000000000000000000000100101 }
b10000000000000000000000000100101 +"
b10000000000000000000000000010000 |
b10000000000000000000000000010000 ."
b11 G
b11 p
b11 z
16
#55000
06
#60000
bx0 K"
b1110 E"
b11111110 ""
b11111110 x
b11111110 !"
1#"
1V
b1111111110 N
b1111111110 k
0M
b11111111111111111111111111111110 e
b1111111110 g
b1100 b
b100 -"
b100 )"
b101 q
bx w
bx Q
bx ^
0Y
b11001111111111111111111111111110 J
b11001111111111111111111111111110 d
b11001111111111111111111111111110 ~
b100 G
b100 p
b100 z
bx %"
bx L
bx f
bx r
bx y
bx $"
bx F"
b11001111111111111111111111111110 |
b11001111111111111111111111111110 ."
b0 }
b0 +"
b0 @"
b111 R"
16
#65000
06
#70000
b0 K"
1u
b0 E"
b0 ""
b0 x
b0 !"
b0 N
b0 k
xo
bx l
b0 e
b0 g
b0 b
b0 Q
b0 ^
0#"
0V
b110 q
b0 J
b0 d
b0 ~
b101 -"
b101 )"
b1000 R"
b0 @"
b0 F
b0 {
b0 &"
b0 *"
b0 |
b0 ."
b101 G
b101 p
b101 z
16
#71000
b1000111 <
b1 8
19
#75000
06
#80000
1u
b111 q
b110 -"
b110 )"
bx00000000000000000000000000000x `
xn
b110 G
b110 p
b110 z
b0 @"
b1001 R"
16
#81000
b0 ;
09
#85000
06
#90000
bx00x K"
b0 l
0u
b1001 E"
b11111001 ""
b11111001 x
b11111001 !"
b11111001 N
b11111001 k
0o
b11111001 e
b11111001 g
b1110 b
b1000 q
b11100000000000000000000011111001 J
b11100000000000000000000011111001 d
b11100000000000000000000011111001 ~
b111 -"
b111 )"
b1010 R"
b0 @"
b10010000000000000000000000010100 }
b10010000000000000000000000010100 +"
b11100000000000000000000011111001 |
b11100000000000000000000011111001 ."
b111 G
b111 p
b111 z
16
#91000
b1 ;
b1 7
#95000
06
#100000
b0 K"
bx l
1u
b0 E"
b0 ""
b0 x
b0 !"
b0 N
b0 k
xo
b0 e
b0 g
b0 b
b1001 q
b1000 -"
b1000 )"
b0 J
b0 d
b0 ~
bx000000000000000000000000000000x `
0n
b1000 G
b1000 p
b1000 z
b0 |
b0 ."
b0 }
b0 +"
b0 @"
b1011 R"
16
#101000
b10 ;
b10 7
#105000
06
#110000
1u
b1010 q
b1001 -"
b1001 )"
b1100 R"
b0 @"
bx00000000000000000000000000000x `
xn
b1001 G
b1001 p
b1001 z
16
#111000
b11 ;
b11 7
#115000
06
#120000
b1011 q
b1010 -"
b1010 )"
b1010 G
b1010 p
b1010 z
b0 @"
b1101 R"
16
#121000
b100 ;
b100 7
#125000
06
#130000
b1100 q
b1011 -"
b1011 )"
b1110 R"
b0 @"
b1011 G
b1011 p
b1011 z
16
#131000
b101 ;
b101 7
#135000
06
#140000
b1101 q
b1100 -"
b1100 )"
b1100 G
b1100 p
b1100 z
b11001111111111111111111111110100 }
b11001111111111111111111111110100 +"
b0 @"
b1111 R"
16
#141000
b110 ;
b110 7
#145000
06
#150000
b1110 q
b1101 -"
b1101 )"
b10000 R"
b0 @"
b0 }
b0 +"
b1101 G
b1101 p
b1101 z
16
#151000
b111 ;
b111 7
#155000
06
#160000
b1111 q
b1110 -"
b1110 )"
b1110 G
b1110 p
b1110 z
b0 @"
b10001 R"
16
#161000
b1000 ;
b1000 7
#165000
06
#170000
b10000 q
b1111 -"
b1111 )"
b10010 R"
b0 @"
b10000000000000000000000000010100 }
b10000000000000000000000000010100 +"
b1111 G
b1111 p
b1111 z
16
#171000
b1001 ;
b1001 7
#175000
06
#180000
b10001 q
b0 -"
b10000 )"
b10000 G
b10000 p
b10000 z
b0 }
b0 +"
b0 @"
b10011 R"
16
#181000
b1010 ;
b1010 7
#185000
06
#190000
0o
b0 s
b110 b
b10010 q
b1100000000000000000000000000000 J
b1100000000000000000000000000000 d
b1100000000000000000000000000000 ~
b1 -"
b10001 )"
b10100 R"
b0 @"
b1100000000000000000000000000000 |
b1100000000000000000000000000000 ."
b10001 G
b10001 p
b10001 z
16
#191000
b1011 ;
b1011 7
#195000
06
#200000
1I"
1H"
b10000 ""
b10000 x
b10000 !"
bx Q
bx ^
1Y
1'"
1K
1M
b10000 N
b10000 k
b10000 e
b10000 g
b1001 b
0u
b10 -"
b10010 )"
b10011 q
b0 w
b10010000000000000000000000010000 J
b10010000000000000000000000010000 d
b10010000000000000000000000010000 ~
bx000000000000000000000000000000x `
0n
b10010 G
b10010 p
b10010 z
b0 %"
b0 L
b0 f
b0 r
b0 y
b0 $"
b0 F"
b10010000000000000000000000010000 |
b10010000000000000000000000010000 ."
b10010000000000000000000000100100 }
b10010000000000000000000000100100 +"
b0 @"
b10101 R"
16
#201000
b1100 ;
b1100 7
#205000
06
#210000
xI"
0H"
bx Q
bx ^
1Y
0'"
0K
1M
bx s
b1000 b
b10100 q
b10000000000000000000000000010000 J
b10000000000000000000000000010000 d
b10000000000000000000000000010000 ~
b11 -"
b10011 )"
b10110 R"
b0 @"
b0 }
b0 +"
b10000000000000000000000000010000 |
b10000000000000000000000000010000 ."
b10011 G
b10011 p
b10011 z
16
#211000
b1101 ;
b1101 7
#215000
06
#220000
bx0 K"
b0 l
b1110 E"
b11111110 ""
b11111110 x
b11111110 !"
1#"
1V
b1111111110 N
b1111111110 k
0M
b11111111111111111111111111111110 e
b1111111110 g
b1100 b
b100 -"
b10100 )"
b10101 q
bx w
b0 Q
b0 ^
0Y
b11001111111111111111111111111110 J
b11001111111111111111111111111110 d
b11001111111111111111111111111110 ~
b10100 G
b10100 p
b10100 z
bx %"
bx L
bx f
bx r
bx y
bx $"
bx F"
b11001111111111111111111111111110 |
b11001111111111111111111111111110 ."
b0 @"
b10111 R"
16
#221000
b1110 ;
b1110 7
#225000
06
#230000
b0 K"
bx l
1u
b0 E"
b0 ""
b0 x
b0 !"
0#"
0V
b0 N
b0 k
xo
b0 e
b0 g
b0 b
b10110 q
b0 J
b0 d
b0 ~
b101 -"
b10101 )"
b11000 R"
b0 @"
b1100000000000000000000000000001 }
b1100000000000000000000000000001 +"
b0 |
b0 ."
b10101 G
b10101 p
b10101 z
16
#231000
b1111 ;
b1111 7
#235000
06
#240000
1u
b10111 q
b110 -"
b10110 )"
bx00000000000000000000000000000x `
xn
b10110 G
b10110 p
b10110 z
b11101111111111111111111111101010 }
b11101111111111111111111111101010 +"
b0 @"
b11001 R"
16
#241000
b10000 ;
b0 7
#245000
06
#250000
bx00x K"
b0 l
0u
b1001 E"
b11111001 ""
b11111001 x
b11111001 !"
b11111001 N
b11111001 k
0o
b11111001 e
b11111001 g
b1110 b
b11000 q
b11100000000000000000000011111001 J
b11100000000000000000000011111001 d
b11100000000000000000000011111001 ~
b111 -"
b10111 )"
b11010 R"
b0 @"
b0 }
b0 +"
b11100000000000000000000011111001 |
b11100000000000000000000011111001 ."
b10111 G
b10111 p
b10111 z
16
#251000
